/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.njkol.db.models;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class OrderDetail extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OrderDetail\",\"namespace\":\"com.njkol.db.models\",\"fields\":[{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"total\",\"type\":\"float\"},{\"name\":\"product_detail\",\"type\":{\"type\":\"record\",\"name\":\"Product\",\"fields\":[{\"name\":\"product_id\",\"type\":\"long\"},{\"name\":\"product_name\",\"type\":\"string\",\"doc\":\"This is the name of the product\"},{\"name\":\"product_description\",\"type\":[\"string\",\"null\"],\"order\":\"descending\"},{\"name\":\"product_status\",\"type\":{\"type\":\"enum\",\"name\":\"product_status\",\"symbols\":[\"AVAILABLE\",\"OUT_OF_STOCK\",\"ONLY_FEW_LEFT\"]},\"default\":\"AVAILABLE\"},{\"name\":\"product_category\",\"type\":\"string\",\"doc\":\"This is the name of the product category\",\"default\":null},{\"name\":\"price\",\"type\":\"float\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int quantity;
  @Deprecated public float total;
  @Deprecated public com.njkol.db.models.Product product_detail;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public OrderDetail() {}

  /**
   * All-args constructor.
   */
  public OrderDetail(java.lang.Integer quantity, java.lang.Float total, com.njkol.db.models.Product product_detail) {
    this.quantity = quantity;
    this.total = total;
    this.product_detail = product_detail;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return quantity;
    case 1: return total;
    case 2: return product_detail;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: quantity = (java.lang.Integer)value$; break;
    case 1: total = (java.lang.Float)value$; break;
    case 2: product_detail = (com.njkol.db.models.Product)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'quantity' field.
   */
  public java.lang.Integer getQuantity() {
    return quantity;
  }

  /**
   * Sets the value of the 'quantity' field.
   * @param value the value to set.
   */
  public void setQuantity(java.lang.Integer value) {
    this.quantity = value;
  }

  /**
   * Gets the value of the 'total' field.
   */
  public java.lang.Float getTotal() {
    return total;
  }

  /**
   * Sets the value of the 'total' field.
   * @param value the value to set.
   */
  public void setTotal(java.lang.Float value) {
    this.total = value;
  }

  /**
   * Gets the value of the 'product_detail' field.
   */
  public com.njkol.db.models.Product getProductDetail() {
    return product_detail;
  }

  /**
   * Sets the value of the 'product_detail' field.
   * @param value the value to set.
   */
  public void setProductDetail(com.njkol.db.models.Product value) {
    this.product_detail = value;
  }

  /** Creates a new OrderDetail RecordBuilder */
  public static com.njkol.db.models.OrderDetail.Builder newBuilder() {
    return new com.njkol.db.models.OrderDetail.Builder();
  }
  
  /** Creates a new OrderDetail RecordBuilder by copying an existing Builder */
  public static com.njkol.db.models.OrderDetail.Builder newBuilder(com.njkol.db.models.OrderDetail.Builder other) {
    return new com.njkol.db.models.OrderDetail.Builder(other);
  }
  
  /** Creates a new OrderDetail RecordBuilder by copying an existing OrderDetail instance */
  public static com.njkol.db.models.OrderDetail.Builder newBuilder(com.njkol.db.models.OrderDetail other) {
    return new com.njkol.db.models.OrderDetail.Builder(other);
  }
  
  /**
   * RecordBuilder for OrderDetail instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OrderDetail>
    implements org.apache.avro.data.RecordBuilder<OrderDetail> {

    private int quantity;
    private float total;
    private com.njkol.db.models.Product product_detail;

    /** Creates a new Builder */
    private Builder() {
      super(com.njkol.db.models.OrderDetail.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.njkol.db.models.OrderDetail.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.quantity)) {
        this.quantity = data().deepCopy(fields()[0].schema(), other.quantity);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.total)) {
        this.total = data().deepCopy(fields()[1].schema(), other.total);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.product_detail)) {
        this.product_detail = data().deepCopy(fields()[2].schema(), other.product_detail);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing OrderDetail instance */
    private Builder(com.njkol.db.models.OrderDetail other) {
            super(com.njkol.db.models.OrderDetail.SCHEMA$);
      if (isValidValue(fields()[0], other.quantity)) {
        this.quantity = data().deepCopy(fields()[0].schema(), other.quantity);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.total)) {
        this.total = data().deepCopy(fields()[1].schema(), other.total);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.product_detail)) {
        this.product_detail = data().deepCopy(fields()[2].schema(), other.product_detail);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'quantity' field */
    public java.lang.Integer getQuantity() {
      return quantity;
    }
    
    /** Sets the value of the 'quantity' field */
    public com.njkol.db.models.OrderDetail.Builder setQuantity(int value) {
      validate(fields()[0], value);
      this.quantity = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'quantity' field has been set */
    public boolean hasQuantity() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'quantity' field */
    public com.njkol.db.models.OrderDetail.Builder clearQuantity() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'total' field */
    public java.lang.Float getTotal() {
      return total;
    }
    
    /** Sets the value of the 'total' field */
    public com.njkol.db.models.OrderDetail.Builder setTotal(float value) {
      validate(fields()[1], value);
      this.total = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'total' field has been set */
    public boolean hasTotal() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'total' field */
    public com.njkol.db.models.OrderDetail.Builder clearTotal() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'product_detail' field */
    public com.njkol.db.models.Product getProductDetail() {
      return product_detail;
    }
    
    /** Sets the value of the 'product_detail' field */
    public com.njkol.db.models.OrderDetail.Builder setProductDetail(com.njkol.db.models.Product value) {
      validate(fields()[2], value);
      this.product_detail = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'product_detail' field has been set */
    public boolean hasProductDetail() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'product_detail' field */
    public com.njkol.db.models.OrderDetail.Builder clearProductDetail() {
      product_detail = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public OrderDetail build() {
      try {
        OrderDetail record = new OrderDetail();
        record.quantity = fieldSetFlags()[0] ? this.quantity : (java.lang.Integer) defaultValue(fields()[0]);
        record.total = fieldSetFlags()[1] ? this.total : (java.lang.Float) defaultValue(fields()[1]);
        record.product_detail = fieldSetFlags()[2] ? this.product_detail : (com.njkol.db.models.Product) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
